def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
  localPropertiesFile.withReader('UTF-8') { reader ->
    localProperties.load(reader)
  }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
  throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
  flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
  flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
  keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def debugKeystoreProperties = new Properties()
def debugKeystorePropertiesFile = rootProject.file('debugkey.properties')
if (debugKeystorePropertiesFile.exists()) {
  debugKeystoreProperties.load(new FileInputStream(debugKeystorePropertiesFile))
}

def releaseKeystoreProperties = new Properties()
def releaseKeystorePropertiesFile = rootProject.file('releasekey.properties')
if (releaseKeystorePropertiesFile.exists()) {
  releaseKeystoreProperties.load(new FileInputStream(releaseKeystorePropertiesFile))
}

android {
  compileSdkVersion 31

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = '1.8'
  }

  lintOptions {
    checkReleaseBuilds false
  }
  
  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
  }

  defaultConfig {
    applicationId "com.xdi.nowly"
    minSdkVersion 21
    targetSdkVersion 30
    versionCode flutterVersionCode.toInteger()
    versionName flutterVersionName
    multiDexEnabled true
  }

  signingConfigs {
    if (releaseKeystorePropertiesFile.exists()) {
      release {
        keyAlias releaseKeystoreProperties['keyAlias']
        keyPassword releaseKeystoreProperties['keyPassword']
        storeFile file(releaseKeystoreProperties['storeFile'])
        storePassword releaseKeystoreProperties['storePassword']
      }
    }
    
    debug {
      keyAlias debugKeystoreProperties['keyAlias']
      keyPassword debugKeystoreProperties['keyPassword']
      storeFile file(debugKeystoreProperties['storeFile'])
      storePassword debugKeystoreProperties['storePassword']
    }
  }

  buildTypes {
    buildTypes {  
      if (releaseKeystorePropertiesFile.exists()) {
        release {
          signingConfig signingConfigs.release
        }
      }

      profile {
        signingConfig signingConfigs.debug
      }
      
      debug {
        signingConfig signingConfigs.debug
      }
    }
  }

  flavorDimensions "app"
  
  productFlavors {
    dev {
      flavorDimensions "app"
      resValue "string", "app_name", "Dev Nowly"
      applicationIdSuffix '.dev'
    }
    qa {
      flavorDimensions "app"
      resValue "string", "app_name", "Test Nowly"
      applicationIdSuffix '.test'
    }
    prod {
      flavorDimensions "app"
      resValue "string", "app_name", "Nowly"
    }
  }
}

flutter {
  source '../..'
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation platform('com.google.firebase:firebase-bom:29.0.0')
  implementation 'com.google.firebase:firebase-analytics-ktx'
  implementation 'com.android.support:multidex:2.0.1'
  implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
}
